<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "../../../docbook-xml-4.5/docbookx.dtd">
<appendix id="appendix.Scripts.inOmegaT">
  <title>Scripts<indexterm class="singular">
      <primary>Scripts</primary>
    </indexterm></title>

  <section>
    <title>Introductie</title>

    <para>OmegaT maakt het mogelijk scripts uit te voeren die zijn geschreven in verschillende scripttalen.</para>
  </section>

  <section>
    <title>Gebruiken</title>

    <para>Klikken op <guisubmenu>Extra &gt; </guisubmenu><guisubmenu>Scripten</guisubmenu> opent het dialoogvenster Scripten:<screenshot> <screeninfo>dialoogvenster Scripten</screeninfo> <mediaobject> <imageobject> <imagedata fileref="images/ScriptingDialog.png"/> </imageobject> </mediaobject> </screenshot></para>

    <para>Het dialoogvenster Scripten maakt het voor u mogelijk om een bestaand script in het tekstgebied te laden en het uit te voeren tegen het huidige geopende project. Doe het volgende om de mogelijkheid voor scripten aan te passen:</para>

    <itemizedlist>
      <listitem>
        <para>Laadt een script in het bewerkingsvenster door op de naam ervan te klikken in de lijst in het venster links.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>Klik met rechts op een knop van &quot;&lt;1&gt;&quot; tot en met &quot;&lt;12&gt;&quot; in het onderste venster en selecteer &quot;Toevoegen&quot;. In het voorbeeld hierboven zijn al twee scripts (positie 1 en 2) toegevoegd.</para>
      </listitem>
    </itemizedlist>

    <itemizedlist>
      <listitem>
        <para>Als u met links klikt op het cijfer zal het geselecteerde script worden uitgevoerd. U kunt de geselecteerde macro's ook starten vanuit het hoofdmenu door hun items te gebruiken in het menu <guisubmenu>Extra </guisubmenu> of door te drukken op<keycap> Ctrl+Alt+F#</keycap> (# 1 tot en met 12).</para>
      </listitem>
    </itemizedlist>

    <para>Standaard worden scripts opgeslagen in de map &quot;scripts&quot; die zich bevindt in de installatiemap van OmegaT (de map waarin OmegaT.jar staat).e</para>

    <para>U kunt daar nieuwe scripts toevoegen, zodat ze zullen verschijnen in de lijst met beschikbare scripts in het venster Scripten.</para>

    <para>Enkele aanvullende scripts zijn hier te vinden: <ulink url="https://sourceforge.net/projects/omegatscripts/">OmegaT Scripts</ulink>
    </para>
  </section>

  <section>
    <title>Scripttalen</title>

    <para>De volgende scripttalen zijn geïmplementeerd:</para>

    <para><itemizedlist>
        <listitem>
          <para><emphasis role="bold">Groovy</emphasis> (http://groovy.codehaus.org): is een dynamische taal voor de Java Virtual machine. Het bouwt op de sterke punten van Java maar heeft aanvullende krachtige mogelijkheden, geïnspireerd op talen als Python, Ruby en Smalltalk.</para>
        </listitem>
      </itemizedlist><itemizedlist>
        <listitem>
          <para><emphasis role="bold">JavaScript</emphasis> (soms afgekort tot JS, niet te verwarren met Java): is een op prototype gebaseerde scripttaal die dynamisch is, zwak getypeerd en eersteklas functies heeft. Het is een taal met meerdere paradigma's, ondersteund object-georiënteerde, imperatieve en functionele programmeerstijlen. Omdat het de taal is achter de populaire software zoals Firefox is het met voorkeur een bekend gereedschap om te programmeren in het domein van open-source .</para>
        </listitem>
      </itemizedlist>Alle talen hebben toegang tot het objectmodel van OmegaT, met het project als het hoogste object. De volgende code in groovy scant bijvoorbeeld door alle segmenten in alle bestanden in het huidige project en drukt, als de vertaling bestaat, de bron en het doel van het segment af:</para>

    <programlisting>    files = project.projectFiles;
    for (i in 0 ..&lt; files.size())
    {
        for (j in 0 ..&lt; files[i].entries.size())
        {
            currSegment = files[i].entries[j];
            if (project.getTranslationInfo(currSegment))
            {
                source = currSegment.getSrcText();
                target = project.getTranslationInfo(currSegment).translation;
                console.println(source + &quot; &gt;&gt;&gt;&gt; &quot; + target);
            }     
        }
    }</programlisting>
  </section>
</appendix>